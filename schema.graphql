enum ProposalType {
  TechnicalCommittee
  UpgradeCommittee
  Community
}

enum ProposalStatus {
  Proposed
  Scheduled
  Closed
  Skipped
  Pending
  Executed
  ExecutionFailed
  Failed
  Expired
  Rejected
}

type Preimage @entity {
  id: ID!
  proposer: String
  hash: String! @index
  deposit: BigInt
  length: Int
  proposedCall: ProposedCall
  section: String
  method: String
  status: ProposalStatus!
  createdAtBlock: Int! @index
  createdAt: DateTime! @index
  updatedAtBlock: Int
  updatedAt: DateTime
}

type MotionThreshold {
  value: Int!
}

enum ReferendumThresholdType {
  SuperMajorityApprove
  SuperMajorityAgainst
  SimpleMajority
}

type ReferendumThreshold {
  type: ReferendumThresholdType!
}

union Threshold = MotionThreshold | ReferendumThreshold

type Proposal @entity {
  id: ID!
  type: ProposalType! @index
  hash: String @index
  index: Int @index
  proposer: String
  identity: String
  deposit: BigInt
  threshold: Threshold
  end: Int
  delay: Int
  fee: BigInt
  bond: BigInt
  description: String
  url: String
  proposalArguments: ProposedCall
  voting: [Vote!] @derivedFrom(field: "proposal")
  status: ProposalStatus!
  statusHistory: [StatusHistory!] @derivedFrom(field: "proposal")
  metadata: String
  tally: Tally
  expiryTime: Int
  executeAtBlockNumber: Int
  executedAt: DateTime
  createdAtBlock: Int! @index
  createdAt: DateTime! @index
  endedAtBlock: Int
  endedAt: DateTime
  updatedAtBlock: Int @index
  updatedAt: DateTime @index
}

type Tally {
  ayes: BigInt
  nays: BigInt
  support: BigInt
  bareAyes: BigInt
  totalSeats: BigInt
}

type StatusHistory @entity {
  id: ID!
  proposal: Proposal!
  status: ProposalStatus!
  block: Int!
  timestamp: DateTime!
}

type ProposedCall {
  section: String!
  method: String!
  args: JSON
  description: String!
}

enum VoteDecision {
  yes
  no
  abstain
  split
  splitAbstain
}

type StandardVoteBalance {
  value: BigInt
}

type SplitVoteBalance {
  aye: BigInt
  nay: BigInt
  abstain: BigInt
}

union VoteBalance = StandardVoteBalance | SplitVoteBalance

type Vote @entity {
  id: ID!
  voter: String
  proposal: Proposal!
  proposalIndex: Int!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  decision: VoteDecision
  balance: VoteBalance
  lockPeriod: Int
  identityId: String
  removedAtBlock: Int
  removedAt: DateTime
}